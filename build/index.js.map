{"version":3,"sources":["../index.js"],"names":["msg_types","Sphinx","MSG_TYPE","initted","token","process","env","TOKEN","sphinxToken","SPHINX_TOKEN","url","init","client","Client","login","on","MESSAGE","message","arr","content","split","length","cmd","console","log","fetch","headers","r","ok","json","j","price","data","BTC","quote","USD","toFixed","percentChange24","percent_change_24h","percentChange24String","changeColor","embed","MessageEmbed","setAuthor","setTitle","addFields","name","value","inline","color","setThumbnail","botSVG","channel","send"],"mappings":"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","sourcesContent":["import 'regenerator-runtime/runtime.js';\nimport * as Sphinx from 'sphinx-bot'\nimport * as fetch from 'node-fetch'\nconst msg_types = Sphinx.MSG_TYPE\n\nlet initted = false\n\n/*\n// SPHINX_TOKEN contains id,secret,and url\n// message.channel.send sends to the url the data\n*/\n\nconst token = process.env.TOKEN\nconst sphinxToken = process.env.SPHINX_TOKEN\nconst url = 'https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest'\n\nfunction init() {\n  if(initted) return\n  initted = true\n\n  const client = new Sphinx.Client()\n  client.login(sphinxToken)\n\n  client.on(msg_types.MESSAGE, async (message) => {\n    const arr = message.content.split(' ')\n    if (arr.length < 2) return\n    if (arr[0]!=='/btc') return\n    const cmd = arr[1]\n    \n    switch (cmd) {\n\n      case 'price':\n        console.log(\"price\")\n        try {\n            const r = await fetch(url+'?symbol=BTC&convert=USD',{\n                headers:{'X-CMC_PRO_API_KEY': token, 'Accept': 'application/json'}\n            })\n            if (!r.ok) return\n            const j = await r.json()\n            const price = '$'+j.data.BTC.quote.USD.price.toFixed(2)\n            const percentChange24 = j.data.BTC.quote.USD.percent_change_24h\n            const percentChange24String = percentChange24.toFixed(2)+'%'\n            const changeColor = percentChange24>0?'#00c991':'#7a2d2f'\n            const embed = new Sphinx.MessageEmbed()\n              .setAuthor('BitcoinBot')\n              .setTitle('Bitcoin Price:')\n              .addFields([\n                { name: 'Price:', value: price, inline:true },\n                { name: '24 Hour Change:', value: percentChange24String, inline:true, color:changeColor }\n              ])\n              .setThumbnail(botSVG)\n            console.log(\"GENEERATED EMBED\",embed)\n            message.channel.send({ embed })\n        } catch(e){\n            console.log('BTC bot error',e)\n        }\n        return\n        \n      default:\n        const embed = new Sphinx.MessageEmbed()\n          .setAuthor('BitcoinBot')\n          .setTitle('BitcoinBot Commands:')\n          .addFields([\n            { name: 'Print BTC price', value: '/btc price' },\n            { name: 'Help', value: '/btc help' }\n          ])\n          .setThumbnail(botSVG)\n        message.channel.send({ embed })\n        return\n    }\n  })\n}\n\nconst botSVG = `<svg viewBox=\"64 64 896 896\" height=\"12\" width=\"12\" fill=\"white\">\n  <path d=\"M300 328a60 60 0 10120 0 60 60 0 10-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 10120 0 60 60 0 10-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" />\n</svg>`\n\ninit()"],"file":"index.js"}